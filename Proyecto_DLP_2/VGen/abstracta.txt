CATEGORIES
definicion, tipo, sentencia, expr, operador

NODES
program -> definicion*;


variable:definicion -> nombre:string tipo ambito:Ambito;
definicion_struct:definicion -> nombre:string campo_struct*;
definicion_funcion:definicion -> nombre:string parametros:variable* retorno:tipo locales:variable* sentencias:sentencia*;

campo_struct -> nombre:string tipo;

sentencia_asignacion:sentencia -> izquierda:expr derecha:expr;
sentencia_print:sentencia -> expresiones:expr fincadena:string;
sentencia_read:sentencia -> expresiones:expr;
sentencia_if:sentencia -> condicion:expr sentencias:sentencia* sino:sentencia*;
sentencia_while:sentencia -> condicion:expr sentencias:sentencia*;
sentencia_llamada_funcion:sentencia -> nombre:string parametros:expr*;
sentencia_return:sentencia -> expresion:expr;

tipo_Int:tipo -> ;
tipo_Float:tipo -> ;
tipo_Char:tipo -> ;
tipo_Void:tipo -> ;
tipo_Struct:tipo -> nombre:string;
tipo_Array:tipo -> tamanio:string tipoElementos:tipo;

expr_int:expr -> string;
expr_real:expr -> string;
expr_char:expr -> string;
expr_ident:expr -> string;
expr_binaria:expr -> izquierda:expr operador:operador derecha:expr;
expr_negada:expr -> operador:operador derecha:expr;
expr_cast:expr -> tipo_convertido:tipo expr:expr;
expr_acceso_vector:expr -> fuera:expr dentro:expr;
expr_acceso_struct:expr -> izquierda:expr derecha:expr;
expr_llamada_funcion:expr -> nombre:string parametros:expr*;

operador_aritmetico:operador-> string;
operador_logico:operador-> string;
operador_comparacion:operador-> string;