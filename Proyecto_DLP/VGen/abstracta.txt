CATEGORIES
bloque, tipo, sentencia, expr, operador

NODES
program -> bloque*;

definicion_variable_global:bloque -> nombre:string tipo;

struct:bloque -> nombre:string definicion_campo_struct*;
definicion_campo_struct -> nombre:string tipo;

funcion:bloque -> nombre:string parametros:parametro* retorno:tipo locales:definicion_variable_local* sentencias:sentencia*;

definicion_variable_local -> nombre:string tipo;

parametro -> nombre:string tipo;

sentencia_asignacion:sentencia -> izquierda:expr derecha:expr;
sentencia_print:sentencia -> expresiones:expr;
sentencia_read:sentencia -> expresiones:expr;
sentencia_if:sentencia -> condicion:expr sentencias:sentencia* sino:sentencia*;
sentencia_while:sentencia -> condicion:expr sentencias:sentencia*;
sentencia_llamada_funcion:sentencia -> nombre:string parametros:expr*;
sentencia_return:sentencia -> expresion:expr;

tipoInt:tipo -> ;
tipoFloat:tipo -> ;
tipoChar:tipo -> ;
tipoStruct:tipo -> nombre:string;
tipoArray:tipo -> tamanio:string tipoElementos:tipo;
tipoVoid -> ;

expr_int:expr -> string;
expr_real:expr -> string;
expr_char:expr -> string;
expr_ident:expr -> string;
expr_binaria:expr -> izquierda:expr operador:operador derecha:expr;
expr_vector:expr -> fuera:expr dentro:expr;
expr_punto:expr -> izquierda:expr derecha:expr;
expr_parentesis:expr -> expr;
expr_cast:expr -> tipo_convertido:tipo expr:expr;
expr_llamada_funcion:expr -> nombre:string parametros:expr*;


operador_aritmetico:operador-> string;
operador_logico:operador-> string;
operador_comparacion:operador-> string;